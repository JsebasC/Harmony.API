// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using msvHarmony.Infrastructure.DataSource;

#nullable disable

namespace msvHarmony.Infrastructure.Migrations
{
    [DbContext(typeof(HarmonyContext))]
    partial class HarmonyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("msvHarmony.Domain.Models.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Anio")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<Guid>("ArtistaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DiscograficaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Portada")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.HasIndex("DiscograficaId");

                    b.HasIndex("GeneroId");

                    b.ToTable("Album", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("dddf3f3e-c737-4d93-81bf-2a15354ceee7"),
                            Anio = 1982,
                            ArtistaId = new Guid("b2d8a25a-01b3-454a-bb62-c829cff931b7"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 589, DateTimeKind.Local).AddTicks(8533),
                            DiscograficaId = new Guid("7e49603a-44e5-48d3-990c-691008b0e88a"),
                            GeneroId = new Guid("8fed34da-dbe0-4ffb-b7e4-59b1546d446e"),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 589, DateTimeKind.Local).AddTicks(8551),
                            Portada = "Thriller.jpg",
                            Titulo = "Thriller"
                        },
                        new
                        {
                            Id = new Guid("a9cbd226-1b7b-4efe-b5d1-b2951bf16d39"),
                            Anio = 2020,
                            ArtistaId = new Guid("00da8580-99e6-4e16-8a0b-d8739b4f98ff"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 589, DateTimeKind.Local).AddTicks(8560),
                            DiscograficaId = new Guid("71f1d39b-5fbd-42d7-b4df-a904880b904d"),
                            GeneroId = new Guid("c0fa37f3-5fb3-41d2-ba70-05fcbd352218"),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 589, DateTimeKind.Local).AddTicks(8561),
                            Portada = "UltimoTour.jpg",
                            Titulo = "El Último Tour del Mundo"
                        },
                        new
                        {
                            Id = new Guid("09f84863-c6bd-4d04-a076-a145847496c8"),
                            Anio = 2019,
                            ArtistaId = new Guid("286f574b-b842-4930-86c1-b873350a0d98"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 589, DateTimeKind.Local).AddTicks(8569),
                            DiscograficaId = new Guid("315721f0-9942-4ca2-a7cb-af423dac1d20"),
                            GeneroId = new Guid("c0fa37f3-5fb3-41d2-ba70-05fcbd352218"),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 589, DateTimeKind.Local).AddTicks(8570),
                            Portada = "Oasis.jpg",
                            Titulo = "Oasis"
                        },
                        new
                        {
                            Id = new Guid("36f0c39c-006c-4ba9-b9f1-93a0cb9c2695"),
                            Anio = 2018,
                            ArtistaId = new Guid("00da8580-99e6-4e16-8a0b-d8739b4f98ff"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 589, DateTimeKind.Local).AddTicks(8578),
                            DiscograficaId = new Guid("34a47160-6312-4f1f-a220-4608acb7daac"),
                            GeneroId = new Guid("c0fa37f3-5fb3-41d2-ba70-05fcbd352218"),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 589, DateTimeKind.Local).AddTicks(8580),
                            Portada = "PorSiempre.jpg",
                            Titulo = "X 100pre"
                        });
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Artista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Artista", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("96303db8-663d-441f-b85b-f2424dc42f4c"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4345),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4353),
                            Nombre = "Beyoncé"
                        },
                        new
                        {
                            Id = new Guid("b2d8a25a-01b3-454a-bb62-c829cff931b7"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4358),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4359),
                            Nombre = "Michael Jackson"
                        },
                        new
                        {
                            Id = new Guid("c24fb9db-848c-4a9d-8ae0-44a97a38f0cb"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4363),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4364),
                            Nombre = "Bob Marley"
                        },
                        new
                        {
                            Id = new Guid("41f40298-2bce-45b5-9cf0-6017b2b12f33"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4368),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4369),
                            Nombre = "Shakira"
                        },
                        new
                        {
                            Id = new Guid("286f574b-b842-4930-86c1-b873350a0d98"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4372),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4374),
                            Nombre = "J Balvin"
                        },
                        new
                        {
                            Id = new Guid("00da8580-99e6-4e16-8a0b-d8739b4f98ff"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4377),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4378),
                            Nombre = "Bad Bunny"
                        },
                        new
                        {
                            Id = new Guid("740d3805-1377-4e3e-962f-16b594401624"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4382),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4383),
                            Nombre = "Daddy Yankee"
                        },
                        new
                        {
                            Id = new Guid("839d6647-abb1-4b26-b096-626be91e8fa9"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4387),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 590, DateTimeKind.Local).AddTicks(4388),
                            Nombre = "Carlos Santana"
                        });
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Cancion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Portada")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Cancion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("32b45778-764a-4ae0-9a44-5555d189d6a9"),
                            AlbumId = new Guid("dddf3f3e-c737-4d93-81bf-2a15354ceee7"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1590),
                            Duracion = 283,
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1598),
                            Nombre = "Wanna Be Startin' Somethin'",
                            Portada = "Wanna.jpg"
                        },
                        new
                        {
                            Id = new Guid("d2f3c9a1-46e5-40d6-b782-674ba61334c8"),
                            AlbumId = new Guid("dddf3f3e-c737-4d93-81bf-2a15354ceee7"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1606),
                            Duracion = 357,
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1607),
                            Nombre = "Thriller",
                            Portada = "Thriller-Cancion.jpg"
                        },
                        new
                        {
                            Id = new Guid("dbf159ea-55f1-44f5-a98e-36d45b62bc28"),
                            AlbumId = new Guid("a9cbd226-1b7b-4efe-b5d1-b2951bf16d39"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1613),
                            Duracion = 210,
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1614),
                            Nombre = "Te Mudaste",
                            Portada = "TeMudaste.jpg"
                        },
                        new
                        {
                            Id = new Guid("34645ff8-7bd8-42d6-9749-1beae05ff7ad"),
                            AlbumId = new Guid("a9cbd226-1b7b-4efe-b5d1-b2951bf16d39"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1716),
                            Duracion = 219,
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1718),
                            Nombre = "Hoy Cobré",
                            Portada = "HoyCobre.jpg"
                        },
                        new
                        {
                            Id = new Guid("9cf403ae-6c10-47aa-95ca-5dc3403ec2da"),
                            AlbumId = new Guid("09f84863-c6bd-4d04-a076-a145847496c8"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1725),
                            Duracion = 246,
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1726),
                            Nombre = "Qué Pretendes",
                            Portada = "Pretendes.jpg"
                        },
                        new
                        {
                            Id = new Guid("59bcaa11-7849-41e1-8e50-beb241e1d612"),
                            AlbumId = new Guid("09f84863-c6bd-4d04-a076-a145847496c8"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1732),
                            Duracion = 263,
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1733),
                            Nombre = "La Canción",
                            Portada = "LaCancion.jpg"
                        },
                        new
                        {
                            Id = new Guid("090e58d6-0f99-471d-a614-9401882fadcb"),
                            AlbumId = new Guid("36f0c39c-006c-4ba9-b9f1-93a0cb9c2695"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1740),
                            Duracion = 207,
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1741),
                            Nombre = "Ni Bien Ni Mal",
                            Portada = "NiBienMal.jpg"
                        },
                        new
                        {
                            Id = new Guid("d7584f4f-5b7e-4102-886c-20a59cd22752"),
                            AlbumId = new Guid("36f0c39c-006c-4ba9-b9f1-93a0cb9c2695"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1747),
                            Duracion = 214,
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(1748),
                            Nombre = "Caro",
                            Portada = "Caro.jpg"
                        });
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Colaboracion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CancionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CancionId");

                    b.ToTable("Colaboracion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("987efd68-63f7-4b3a-a029-3c57d65126a8"),
                            ArtistaId = new Guid("b2d8a25a-01b3-454a-bb62-c829cff931b7"),
                            CancionId = new Guid("32b45778-764a-4ae0-9a44-5555d189d6a9"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8208),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8217)
                        },
                        new
                        {
                            Id = new Guid("1108f4ae-0bd1-46e3-a3d0-78f488ebd0e0"),
                            ArtistaId = new Guid("b2d8a25a-01b3-454a-bb62-c829cff931b7"),
                            CancionId = new Guid("d2f3c9a1-46e5-40d6-b782-674ba61334c8"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8223),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8224)
                        },
                        new
                        {
                            Id = new Guid("05775810-99c0-4c9f-9c64-67b62a757009"),
                            ArtistaId = new Guid("00da8580-99e6-4e16-8a0b-d8739b4f98ff"),
                            CancionId = new Guid("dbf159ea-55f1-44f5-a98e-36d45b62bc28"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8230),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8231)
                        },
                        new
                        {
                            Id = new Guid("fba9d159-8866-4458-a1b3-5828af05fd40"),
                            ArtistaId = new Guid("00da8580-99e6-4e16-8a0b-d8739b4f98ff"),
                            CancionId = new Guid("34645ff8-7bd8-42d6-9749-1beae05ff7ad"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8236),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8237)
                        },
                        new
                        {
                            Id = new Guid("1f4098c0-8e99-4e57-9786-5e58a0832398"),
                            ArtistaId = new Guid("00da8580-99e6-4e16-8a0b-d8739b4f98ff"),
                            CancionId = new Guid("9cf403ae-6c10-47aa-95ca-5dc3403ec2da"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8243),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8244)
                        },
                        new
                        {
                            Id = new Guid("d1cc1ed8-0474-44d7-91a5-219f4325171e"),
                            ArtistaId = new Guid("286f574b-b842-4930-86c1-b873350a0d98"),
                            CancionId = new Guid("9cf403ae-6c10-47aa-95ca-5dc3403ec2da"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8249),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8250)
                        },
                        new
                        {
                            Id = new Guid("5601e689-455c-492d-8ec5-55b950101d56"),
                            ArtistaId = new Guid("00da8580-99e6-4e16-8a0b-d8739b4f98ff"),
                            CancionId = new Guid("090e58d6-0f99-471d-a614-9401882fadcb"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8256),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8257)
                        },
                        new
                        {
                            Id = new Guid("e25b2548-6d17-4f83-a58e-608278bc1801"),
                            ArtistaId = new Guid("00da8580-99e6-4e16-8a0b-d8739b4f98ff"),
                            CancionId = new Guid("d7584f4f-5b7e-4102-886c-20a59cd22752"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8263),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 591, DateTimeKind.Local).AddTicks(8264)
                        });
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Discografica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Discografica", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e49603a-44e5-48d3-990c-691008b0e88a"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 592, DateTimeKind.Local).AddTicks(2333),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 592, DateTimeKind.Local).AddTicks(2340),
                            Nombre = "Sony Music Entertainment"
                        },
                        new
                        {
                            Id = new Guid("71f1d39b-5fbd-42d7-b4df-a904880b904d"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 592, DateTimeKind.Local).AddTicks(2345),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 592, DateTimeKind.Local).AddTicks(2347),
                            Nombre = "Universal Music Group"
                        },
                        new
                        {
                            Id = new Guid("34a47160-6312-4f1f-a220-4608acb7daac"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 592, DateTimeKind.Local).AddTicks(2351),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 592, DateTimeKind.Local).AddTicks(2352),
                            Nombre = "Warner Music Group"
                        },
                        new
                        {
                            Id = new Guid("315721f0-9942-4ca2-a7cb-af423dac1d20"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 592, DateTimeKind.Local).AddTicks(2356),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 592, DateTimeKind.Local).AddTicks(2357),
                            Nombre = "EMI Music"
                        });
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Favorito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CancionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CancionId");

                    b.ToTable("Favorito", (string)null);
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Genero", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cdc4a9d0-9618-413c-b8ef-3c75b2f87aa4"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3219),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3228),
                            Nombre = "Pop"
                        },
                        new
                        {
                            Id = new Guid("8fed34da-dbe0-4ffb-b7e4-59b1546d446e"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3233),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3235),
                            Nombre = "Rock"
                        },
                        new
                        {
                            Id = new Guid("005ec1d9-e027-4000-bf14-007b1dd5a1a4"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3238),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3240),
                            Nombre = "Hip-Hop/Rap"
                        },
                        new
                        {
                            Id = new Guid("b0b3b676-2509-4557-93f3-91d5c134f404"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3243),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3244),
                            Nombre = "R&B/Soul"
                        },
                        new
                        {
                            Id = new Guid("b2a94699-9ff0-4e2c-a867-4e915aa86d3a"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3250),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3251),
                            Nombre = "Jazz"
                        },
                        new
                        {
                            Id = new Guid("0a2cee36-6643-43b3-b0a3-ae29aa36ebb6"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3254),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3255),
                            Nombre = "Reggae"
                        },
                        new
                        {
                            Id = new Guid("1fe91b74-2e0a-44aa-9229-8c12d985eda9"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3259),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3260),
                            Nombre = "Country"
                        },
                        new
                        {
                            Id = new Guid("8eecad94-b361-45fa-80e5-e11a424f9388"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3263),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3265),
                            Nombre = "Electronic/Dance"
                        },
                        new
                        {
                            Id = new Guid("4eb68ff4-7b9c-4618-b64b-a91f51c4bb25"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3270),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3272),
                            Nombre = "Folk"
                        },
                        new
                        {
                            Id = new Guid("baa5cc89-28d4-4ce0-8210-24b1ec453fdf"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3275),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3276),
                            Nombre = "Blues"
                        },
                        new
                        {
                            Id = new Guid("d9df4cc3-7d0d-45ce-959b-7fb34aac6d58"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3280),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3281),
                            Nombre = "Indie"
                        },
                        new
                        {
                            Id = new Guid("541dfa54-35fc-4a70-8aae-cb7b88912945"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3285),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3286),
                            Nombre = "Metal"
                        },
                        new
                        {
                            Id = new Guid("ecb3ea6f-e1db-497a-b777-b58bf7f4f77f"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3289),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3290),
                            Nombre = "Funk"
                        },
                        new
                        {
                            Id = new Guid("c0fa37f3-5fb3-41d2-ba70-05fcbd352218"),
                            CreatedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3294),
                            LastModifiedOn = new DateTime(2024, 4, 2, 15, 34, 50, 593, DateTimeKind.Local).AddTicks(3295),
                            Nombre = "Reggaetón"
                        });
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Playlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Playlist", (string)null);
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.PlaylistDetalle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CancionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PlaylistId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CancionId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistDetalle", (string)null);
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Album", b =>
                {
                    b.HasOne("msvHarmony.Domain.Models.Artista", "Artista")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Album_Artista");

                    b.HasOne("msvHarmony.Domain.Models.Discografica", "Discografica")
                        .WithMany("Albums")
                        .HasForeignKey("DiscograficaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Album_Discografica");

                    b.HasOne("msvHarmony.Domain.Models.Genero", "Genero")
                        .WithMany("Albums")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Album_Genero");

                    b.Navigation("Artista");

                    b.Navigation("Discografica");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Cancion", b =>
                {
                    b.HasOne("msvHarmony.Domain.Models.Album", "Album")
                        .WithMany("Cancions")
                        .HasForeignKey("AlbumId")
                        .IsRequired()
                        .HasConstraintName("FK_Cancion_Album");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Colaboracion", b =>
                {
                    b.HasOne("msvHarmony.Domain.Models.Cancion", "Cancion")
                        .WithMany("Colaboracions")
                        .HasForeignKey("CancionId")
                        .IsRequired()
                        .HasConstraintName("FK_Colaboracion_Cancion");

                    b.Navigation("Cancion");
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Favorito", b =>
                {
                    b.HasOne("msvHarmony.Domain.Models.Cancion", "Cancion")
                        .WithMany("Favoritos")
                        .HasForeignKey("CancionId")
                        .IsRequired()
                        .HasConstraintName("FK_Favorito_Cancion");

                    b.Navigation("Cancion");
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.PlaylistDetalle", b =>
                {
                    b.HasOne("msvHarmony.Domain.Models.Cancion", "Cancion")
                        .WithMany("PlaylistDetalles")
                        .HasForeignKey("CancionId")
                        .IsRequired()
                        .HasConstraintName("FK_PlaylistDetalle_Cancion");

                    b.HasOne("msvHarmony.Domain.Models.Playlist", "Playlist")
                        .WithMany("PlaylistDetalles")
                        .HasForeignKey("PlaylistId")
                        .IsRequired()
                        .HasConstraintName("FK_PlaylistDetalle_Playlist");

                    b.Navigation("Cancion");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Album", b =>
                {
                    b.Navigation("Cancions");
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Artista", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Cancion", b =>
                {
                    b.Navigation("Colaboracions");

                    b.Navigation("Favoritos");

                    b.Navigation("PlaylistDetalles");
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Discografica", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Genero", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("msvHarmony.Domain.Models.Playlist", b =>
                {
                    b.Navigation("PlaylistDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
